spring:
  application:
    name: gateway-mock
  profiles:
    active:
      - local
  cloud:
    gateway:
      globalcors:
        cors-configurations:
          '[/**]':
            allowedOrigins: "*"
            allowedMethods: "*"
            allowedHeaders: "*"
      httpclient:
        connect-timeout: 5000000
        response-timeout: 50000s
        ssl:
          useInsecureTrustManager: true
#      httpserver:
#        wiretap: true
      actuator:
        verbose:
          enabled: true
    config:
      enabled: false
      import-check: false
      name: ${spring.application.name}
      failFast: false
      profile: config-gateway-profile
      label: local
#  ssl:
#    bundle:
#      jks:
#        web-server:
#          key:
#            alias: "certificate"
#            password: “vikash”
#          keystore:
#            location: "classpath:certificate.p12"
#            password: "vikash"
#      pem:
#        client:
#          truststore:
#            certificate: "classpath:client.crt"
server:
  port: 8089
#  ssl:
#    bundle: “web-server”
#    client-auth: NEED

logging:
  level:
    root: info

com:
  mock:
    enable: true

management:
  context-path: /management
  security:
    enabled: false
  endpoint:
    gateway:
      enabled: true
  endpoints:
    enabled-by-default: true
    web:
      base-path: /management
      exposure:
        include: env,health,info,gateway

mock:
  response:
    sampleConfigResponseKey: '{ "statusCode": 701, "statusMessage": "vikash: another sample response" }'
    sampleLoginResponseKey: '{ "@statusCode": 200, "statusMessage": "generic response", "username": "sample@tree.com" }'
    '[sampleLoginResponseKey_Vikash@tree.com_mockResponse]': '{ "statusCode": 200, "statusMessage": "Vikash is allowed", "username": "Vikash@tree.com" }'
    mockLoginApi_Vikash@tree.com_httpStatus: 200
    '[sampleLoginResponseKey_Ramu@tree.com_mockResponse]': '{ "statusCode": 401, "statusMessage": "Ramu is not allowed" }'
    '[mockLoginApi_Ramu@tree.com_httpStatus]': 401
    sampleOtpResponseKey: '{ "statusCode": 200, "statusMessage": "generic response" }'
    mockOtpApi_0123456789_httpStatus: 200
    mockOtpApi_1234567890_httpStatus: 401
    sampleOtpValidateResponseKey: '{ "statusCode": 200, "statusMessage": "generic response", "username": "oSample@tree.com" }'
    sampleOtpValidateResponseKey_123456_mockResponse: '{ "statusCode": 200, "statusMessage": "generic response", "username": "123456@tree.com" }'
    mockOtpValidateApi_123456_httpStatus: 200
    mockOtpValidateApi_000000_httpStatus: 401


mockgateway:
  name: Mock API
  apiGatewayHost: https://localhost:3000
  mockServiceHost: http://localhost:8089
  apis[0]:
    mockEnabled: true
    mockName: mockSampleApi1
    endpointCheck: /api/sample/file
    responseFile: true
    mockResponse: /mock/sample.json
    mockResponseStatus: 200
    mockResponseMapper:
      type: body
      mapperKey: personId
    order: 0
  apis[1]:
    mockEnabled: true
    mockName: mockSampleApi2
    endpointCheck: /api/sample/config
    responseFile: false
    mockResponse: sampleConfigResponseKey
    mockResponseStatus: 400
    mockResponseMapper:
      type: param
      mapperKey: personId
    order: 0
  apis[2]:
    mockEnabled: true
    mockName: getMockTreeApi
    endpointCheck: /tree/task/entities
    responseFile: true
    mockResponse: /mock/tree/get.json
    mockResponseByMethod:
      delete:
        - true
        - /mock/tree/delete.json
      put:
        - true
        - /mock/tree/put.json
      post:
        - true
        - /mock/tree/post.json
    mockResponseStatus: 200
    order: 0
  apis[3]:
    mockEnabled: true
    mockName: mockLoginApi
    endpointCheck: /tree/auth/login
    responseFile: false
    mockResponse: sampleLoginResponseKey
    mockResponseStatus: 200
    mockResponseMapper:
      type: body
      mapperKey: userName
    order: 0
  apis[4]:
    mockEnabled: true
    mockName: mockOtpApi
    endpointCheck: /tree/auth/otp
    responseFile: false
    mockResponse: sampleOtpResponseKey
    mockResponseStatus: 200
    mockResponseMapper:
      type: param
      mapperKey: phoneNumber
    order: 0
  apis[5]:
    mockEnabled: true
    mockName: mockOtpValidateApi
    endpointCheck: /tree/auth/otp/validate
    responseFile: false
    mockResponse: sampleOtpValidateResponseKey
    mockResponseStatus: 200
    mockResponseMapper:
      type: param
      mapperKey: otpNumber
    order: 0
  apis[6]:
    mockEnabled: true
    mockName: mockOtpValidateApi
    endpointCheck: /tree/auth/logout
    responseFile: false
    mockResponse: sampleOtpValidateResponseKey
    mockResponseStatus: 200
    mockResponseMapper:
      type: param
      mapperKey: otpNumber
    order: 0
